apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minecraft-binary-1-21-5
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: eula
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minecraft-symlinks
data:
  links.sh: |
    #!/bin/sh
    # Create symlinks from PVCs to app directory
    ln -sf /eula-mount/eula.txt /app/eula.txt
    ln -sf /minecraft-binary-mount/server.jar /app/server.jar
    cp /config/server.properties /app/
    echo "Symlinks created successfully"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minecraft-cash-setup
data:
  cash.sh: |
    #!/bin/bash
    # Pfade definieren
    CACHE_DIR="/cash"
    APP_DIR="/app"
    MINECARFT_TEMP_DIR="/tmp/minecarft"
    MINECRAFT_JAR="server.jar"
    LOG_FILE="/tmp/minecraft_startup.log"
    JSON_FILES=("ops.json" "whitelist.json" "banned-players.json" "banned-ips.json" "usercache.json")
    # Prüfen, ob die JSON-Dateien im Cache existieren
    all_json_exist=true
    for file in "${JSON_FILES[@]}"; do
      if [ ! -f "$CACHE_DIR/$file" ]; then
        echo "$file nicht im Cache gefunden."
        all_json_exist=false
        break
      fi
    done
    if [ "$all_json_exist" = true ]; then
      echo "Alle JSON-Dateien im Cache gefunden. Erstelle Symlinks nach $APP_DIR..."
      
      # Symlinks für JSON-Dateien
      for file in "${JSON_FILES[@]}"; do
        ln -sf "$CACHE_DIR/$file" "$APP_DIR/$file"
        echo "Link erstellt: $CACHE_DIR/$file -> $APP_DIR/$file"
      done
      
      echo "JSON-Symlinks fertig erstellt."
    else
        ln -s /app $MINECARFT_TEMP_DIR
        cd $MINECARFT_TEMP_DIR
        java -Xmx2G -Xms1G -jar "$MINECRAFT_JAR" nogui > "$LOG_FILE" 2>&1 &
        MC_PID=$!
        echo "Minecraft-Server gestartet mit PID: $MC_PID"
        # Warten, bis der Server vollständig gestartet ist
        echo "Warte auf vollständigen Server-Start..."
        while true; do
        if grep -q "Done" "$LOG_FILE"; then
            echo "Server vollständig gestartet!"
            break
        fi
        
        # Prüfen, ob der Prozess noch läuft
        if ! ps -p $MC_PID > /dev/null; then
            echo "Server-Prozess wurde unerwartet beendet."
            exit 1
        fi
        
        sleep 1
        done
        
        # Kopiere die JSON-Dateien in den Cache-Ordner
        for file in "${JSON_FILES[@]}"; do
            cp $file $CACHE_DIR
            rm $file
            ln -sf "$CACHE_DIR/$file" "$APP_DIR/$file"
        done
        
        # Minecraft-Prozess beenden, nachdem Dateien kopiert wurden
        echo "Beende Minecraft-Server mit PID: $MC_PID"
        kill $MC_PID
        
        # Warten, bis der Prozess wirklich beendet ist
        while ps -p $MC_PID > /dev/null; do
            echo "Warte auf Beendigung des Minecraft-Prozesses..."
            sleep 1
        done
        
        echo "Minecraft-Server erfolgreich beendet."
    fi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: world-link
data:
  world-link.sh: |
    WORLD_NAME=$(grep "level-name=" /config/server.properties | cut -d'=' -f2)
    if [ -d "/minecraft-world/$WORLD_NAME" ]; then
        ln -sf /minecraft-world/$WORLD_NAME /app/$WORLD_NAME         
    fi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: populate-minecraft-pvc
spec:
  template:
    spec:
      containers:
      - name: populate
        image: busybox
        command: ['/bin/sh', '-c']
        args:
          - |
            echo "# Minecraft Server EULA - Automatically accepted on $(date)" > /eula/eula.txt
            echo "eula=true" >> /eula/eula.txt
            #1.21.5
            wget -O /minecraft-1-21-5/server.jar https://piston-data.mojang.com/v1/objects/e6ec2f64e6080b9b5d9b471b291c33cc7f509733/server.jar
        volumeMounts:
        - name: eula-pvc
          mountPath: /eula
        - name: minecraft-binary-1-21-5
          mountPath: /minecraft-1-21-5
      restartPolicy: Never
      volumes:
      - name: eula-pvc
        persistentVolumeClaim:
          claimName: eula
      - name: minecraft-binary-1-21-5
        persistentVolumeClaim:
          claimName: minecraft-binary-1-21-5
  backoffLimit: 4